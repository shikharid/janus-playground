user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log;
pid /run/nginx.pid;

# Load dynamic modules. See /usr/share/nginx/README.dynamic.
include /usr/share/nginx/modules/*.conf;

events {
    worker_connections 1024;
}

http {
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';

    access_log  /var/log/nginx/access.log  main;

    sendfile            on;
    tcp_nopush          on;
    tcp_nodelay         on;
    keepalive_timeout   65;
    types_hash_max_size 2048;

    include             /etc/nginx/mime.types;
    default_type        application/octet-stream;

    # Load modular configuration files from the /etc/nginx/conf.d directory.
    # See http://nginx.org/en/docs/ngx_core_module.html#include
    # for more information.
    include /etc/nginx/conf.d/*.conf;

    server {
            listen              1443 ssl;

            ssl_certificate     /root/janus-docker-cert.pem;
            ssl_certificate_key /root/janus-docker-key.pem;


            location = /call-running.json {
                # the test-client can poll this endpoint and init/cancel calls
                # to our test rooms based on it
                # this gives me control over init call by just changing the flag to true/false

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Headers *;
                if ($request_method = 'GET') {
			        add_header 'Content-Type' 'application/json; charset=utf-8';
                    return 200 '{"isRunning": true}';
                 }
            }

            location / {
                root /opt/janus/demos/;

                proxy_http_version 1.1;
                proxy_set_header Upgrade $http_upgrade;
                proxy_set_header Connection 'upgrade';
                proxy_set_header Host $host;
                proxy_cache_bypass $http_upgrade;
                add_header Access-Control-Allow-Origin *;
                add_header Access-Control-Allow-Headers *;
            }
	}

    server {
            listen              8089 ssl;

            ssl_certificate     /root/janus-docker-cert.pem;
            ssl_certificate_key /root/janus-docker-key.pem;

            location /janus {
                
                if ($request_method = 'OPTIONS') {
			        add_header 'Access-Control-Allow-Origin' '*';
			        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			        add_header 'Access-Control-Max-Age' 1728000;
			        add_header 'Content-Type' 'text/plain; charset=utf-8';
			        add_header 'Content-Length' 0;
			        return 204;
			     }
                proxy_pass http://localhost:8088/janus;
            }
	}

	server {
            listen              7889 ssl;

            ssl_certificate     /root/janus-docker-cert.pem;
            ssl_certificate_key /root/janus-docker-key.pem;

            location /admin {
            	if ($request_method = 'OPTIONS') {
			        add_header 'Access-Control-Allow-Origin' '*';
			        add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';
			        add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';
			        add_header 'Access-Control-Max-Age' 1728000;
			        add_header 'Content-Type' 'text/plain; charset=utf-8';
			        add_header 'Content-Length' 0;
			        return 204;
			     }
                proxy_pass http://localhost:7088/admin;
            }
	}

}
